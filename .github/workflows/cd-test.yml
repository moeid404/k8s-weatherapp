name: CD - Test (PR deploy)

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
      - "feature/**"

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/weatherapp
  CONTAINER_PREFIX: weatherapp-pr-

jobs:
  deploy-test:
    name: Deploy to Test
    if: github.event.action != 'closed'
    runs-on: [self-hosted, linux, test]
    environment: test
    permissions:
      contents: read
      packages: read
    steps:
      - name: Compute SHORT_SHA from PR head
        id: sha
        run: echo "short=$(echo '${{ github.event.pull_request.head.sha }}' | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull by tag and resolve digest
        id: pull
        env:
          IMAGE: ${{ env.IMAGE_NAME }}
          SHORT_SHA: ${{ steps.sha.outputs.short }}
        run: |
          set -e
          TAG="sha-${SHORT_SHA}"
          echo "Using tag: $TAG"
          docker pull "$IMAGE:$TAG"
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' "$IMAGE:$TAG" | sed "s|^$IMAGE@||")
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Run container on TEST
        env:
          IMAGE: ${{ env.IMAGE_NAME }}
          DIGEST: ${{ steps.pull.outputs.digest }}
          NAME: ${{ env.CONTAINER_PREFIX }}${{ github.event.pull_request.number }}
        run: |
          set -e
          docker ps -a --format '{{.Names}}' | grep -q "^$NAME$" && docker stop "$NAME" || true
          docker ps -a --format '{{.Names}}' | grep -q "^$NAME$" && docker rm "$NAME" || true

          docker run -d --name "$NAME" \
            --env-file /etc/weatherapp/test.env \
            -p 3000:3000 \
            --restart always \
            "$IMAGE@$DIGEST"

          sleep 2
          docker ps --filter "name=$NAME" --format 'table {{.Names}}\t{{.Status}}'
          curl -fsS http://localhost:3000/healthz || (echo "Health check failed" && exit 1)

  cleanup-test:
    name: Cleanup Test (on PR close)
    if: github.event.action == 'closed'
    runs-on: [self-hosted, linux, test]
    steps:
      - name: Stop & Remove test container
        env:
          NAME: ${{ env.CONTAINER_PREFIX }}${{ github.event.pull_request.number }}
        run: |
          set -e
          docker ps -a --format '{{.Names}}' | grep -q "^$NAME$" && docker stop "$NAME" || true
          docker ps -a --format '{{.Names}}' | grep -q "^$NAME$" && docker rm "$NAME" || true
