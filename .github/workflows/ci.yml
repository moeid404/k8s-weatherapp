name: CI

on:
  push:
    branches:
      - master
      - "feature/**"
  pull_request:
    branches:
      - master
      - "feature/**"

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/weatherapp

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: [self-hosted, test]
    strategy:
      max-parallel: 1
      matrix:
        test_type: [unit, integration]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps (ci)
        run: npm ci
      - name: Run ${{ matrix.test_type }} tests
        run: |
          if [ "${{ matrix.test_type }}" = "unit" ]; then
            npm run test:unit
          else
            npm run test:integration
          fi
      - name: Dependency scan (npm audit)
        if: matrix.test_type == 'integration'
        run: npm audit --audit-level=high || true

  build-and-push:
    needs: [tests]
    runs-on: [self-hosted, test]
    permissions:
      contents: read
      packages: write
    environment: test
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
            images: ${{ env.IMAGE_NAME }}
            tags: |
                type=sha
                type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
                type=raw,value=pr-${{ github.event.pull_request.number }},enable=${{ github.event_name == 'pull_request' }}
                type=ref,event=push,enable=${{ startsWith(github.ref, 'refs/heads/feature/') }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
